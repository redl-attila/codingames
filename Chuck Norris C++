#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <bitset>

using namespace std;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/

int main()
{
    string MESSAGE;
    getline(cin, MESSAGE);
    
    string binary_message;
    cerr << "Debug messages..."<<endl;
    for(int i=0; i< MESSAGE.length();i++){
        std::string binary = std::bitset<7>(MESSAGE[i]).to_string();
        //cerr <<"binary"<<i<<": "<<binary<<endl;
        binary_message.append(binary);
    }
    cerr<<"binary_message: "<<binary_message<<endl;
    
    for(int n=0;n<binary_message.length();n++){
        //cerr<<"binary_message["<<n<<"]: "<<binary_message[n]<<endl;
        int c=n;
        if(binary_message[n]=='1'){
            if(n==binary_message.length()-1){
                cout<<"0 0";
            }
            else{
                int count=1;
                while(binary_message[n]==binary_message[n+count] && n+count!=binary_message.length()){
                    count++;
                    c++;
                }
                
                cout<<"0 ";
                for(int w=0;w<count;w++)
                    cout<<'0';
                if(c!=binary_message.length()-1)
                    cout<<' ';
                }
            }
        else{
            if(n==binary_message.length()-1)
                cout<<"00 0";
            else{
                int count=1;
                while(binary_message[n]==binary_message[n+count] && n+count!=binary_message.length()){
                    count++;
                    c++;
                }
                
               
                //cerr<<"count: "<<count<<endl<<"n: "<<n<<endl;
                cout<<"00 ";
                for(int w=0;w<count;w++)
                    cout<<'0';
                if(c!=binary_message.length()-1)
                    cout<<' ';
                
            }
        }
        n=c;
    }
    cout<<endl;
    
    //cout << MESSAGE << endl;
}
